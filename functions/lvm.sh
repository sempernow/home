#!/usr/bin/env bash
###############################################################
# LVM : Inspect|Create|Delete : DEVICE : VGs : LVs
# - Create an LVM-based data store for NFS (or any other use)
# - Idempotent
###############################################################
dev="${2:-/dev/sdb}"
vg="${3:-data}"
lv="${4:-nfs1}"
mount="${5:-/srv/nfs/k8s}" # Export if NFS

[[ "${1,,}" == 'inspect' ]] || [[ $5 ]] || echo "
    USAGE : ${BASH_SOURCE##*/} {create,delete} DEVICE VG LV MOUNT || inspect [ DEVICE [VG] ] 
"

inspect(){
    [[ $1 ]] && {
        # Verbose, per : DEVICE [VG]
        sudo pvdisplay $dev
        sudo vgdisplay $vg
        sudo lvm lvdisplay --maps $vg
        #sudo lvm fullreport
        return
    }

    # Physical Volumes  (PVs)
    sudo pvs

    # Volume Groups     (VGs)
    sudo vgs

    # Logical Volumes   (LVs)
    sudo lvs -a -o +devices

    # LVs per device
    lsblk;echo;sudo lvscan
}

create(){
    # Create the Physical Volume  (PV)
    sudo pvs $dev ||
        sudo pvcreate $dev

    # Create the Volume Group     (VG)
    sudo vgs $vg ||
        sudo vgcreate $vg /dev/sdb

    # Create a Logical Volume     (LV)
    sudo lvs $vg ||
        sudo lvcreate -n $lv -l "100%FREE" $vg
        #... keywork "100%FREE" uses all remaining unallocated extents of VG

    # Create FS : Format as XFS
    sudo blkid /dev/$vg/$lv |grep xfs ||
        sudo mkfs.xfs /dev/$vg/$lv

    # Create mount point and mount ephemerally
    sudo mkdir -p $mount &&
        sudo mount /dev/$vg/$lv $mount

    # Persist
    # 1. Get UUID
    blkid="$(sudo blkid /dev/$vg/$lv |cut -d' ' -f2 |cut -d'=' -f2 |sed 's/"//g')"
    # 2. Append to /etc/fstab (once)
	cat /etc/fstab |grep $blkid || cat <<-EOH |sudo tee -a /etc/fstab
	UUID=$blkid $mount xfs defaults 0 0
	EOH
    # 3. Apply changes to systemd srv-nfs-k8s.mount, 
    #    which is dynamically generated by systemd-fstab-generator
    sudo systemctl daemon-reload &&
        systemctl cat srv-nfs-k8s.mount
    # 4. Mount and initialize
    sudo mount -a &&
        sudo chown -R nfsanon:ad-linux-users $mount
}

delete(){
    echo '⚠️⚠️⚠️  This will now DESTROY ALL DATA and LVM objects of "'$dev'" including "'/dev/$vg/$lv'"  ⚠️⚠️⚠️'
    echo 
    read -p "⚠️⚠️⚠️  Okay? [y/N] " n
    [[ ${n,,} != 'y' ]] && return 0
    clear

    # Unmount (if mounted)
    sudo umount /dev/$vg/$lv 2>/dev/null || true

    # Remove the LV
    sudo lvremove -y /dev/$vg/$lv

    # Remove the VG
    sudo vgremove -y $vg

    # Remove the PV
    sudo pvremove $dev

    # Wipe the disk signature (Optional) 
    sudo wipefs -a $dev
    # Extra thoroughly (overwrite with 0s)
    sudo dd if=/dev/zero of=$dev bs=1M count=10
    # If partitioned, may also wipe GPT/MBR headers
    sudo sgdisk --zap-all $dev
}

"$@" || echo ERR $?
